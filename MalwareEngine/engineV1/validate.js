// const nvt = require('node-virustotal');
// const defaultTimedInstance = nvt.makeAPI();
// defaultTimedInstance.setKey('dbb5cf35f17d270477c5ef91c17915ec052b4744bc75107314c751c8a5982635');
// // defaultTimedInstance.setDelay(15000);
const fs = require("fs")
const execSync = require('child_process').execSync
const malwareDirectory = "./tests/fiveMal"
const cleanDirectory = "./tests/fiveClean"
const unknownDirectory = "./tests/unknown"


const enginePath = "./evaluate.js"


// // const aMaliciousFile = require('fs').readFileSync('./tests/testMal.exe');
const VirusTotalApi = require("virustotal-api");
const virusTotal = new VirusTotalApi("dbb5cf35f17d270477c5ef91c17915ec052b4744bc75107314c751c8a5982635");

// virusTotal._options.

// fs.readFile('./tests/testMal.exe', (err, data) => {
//   if (err) {
//     console.log(`Cannot read file. ${err}`);
//   } else {
//     virusTotal
//       .fileScan(data, "testMal.exe")
//       .then(response => {
//         let resource = response.resource;
//         // sometimes later try:
//         virusTotal.fileReport(resource).then(result => {
//           console.log(result);
//         });
//       })
//       .catch(err => console.log(`Scan failed. ${err}`));
//   }
// });

// // console.log(theSameObject)
// const fs = require("fs")
let count = 0;
let results = {}
fs.readdirSync(malwareDirectory).forEach(file => {
    //set filepath
    let filePath = `./${malwareDirectory}/${file}`

    //get entropy
    try {
        let data = execSync(`node ${enginePath} ./${filePath}`, { encoding: 'utf8', maxBuffer: 50 * 1024 * 1024 })

        // console.log(data)
        results[file] = {
            'Actual':'Malware'
        }
        let isMal = ''
        if (data.includes('MALWARE')) {
            console.log(`M.A.TScan`)
            console.log(`file: ${file}`)
            console.log('malware')
            isMal = 'malware'
        }
        else {
            console.log(`M.A.T Scan`)
            console.log(`file: ${file}`)
            console.log('benign')
            isMal = 'benign'

        }
        results[file]['MAT'] = isMal
    }
    catch (e) {
        console.log(`can't open: ${e}`)

    }


    setTimeout(() => {

        // console.log(curValue)
        fs.readFile(filePath, (err, data) => {
            if (err) {
                console.log(`Cannot read file. ${err}`);
            } else {
                virusTotal
                .fileScan(data, filePath)
                .then(response => {
                    let resource = response.resource;
                    // sometimes later try:
                    virusTotal.fileReport(resource).then(result => {
                            let curValue = count
                            console.log('=================')
                            console.log(result.positives);
                            console.log(result.total);
                            console.log(curValue)
                            results[file]['VT']= `${result.positives} out of ${result.total} or ${Math.trunc(100*(result.positives/result.total))}%`
                            
                            fs.writeFileSync('testResults.txt', JSON.stringify(results,null,2)) 
                        });
                    })
                    .catch(err => console.log(`Scan failed. ${err}`));
            }
        });
    },
        count*30000 + 1000
    )
    // malwareFiles.push(file)
    count++

})


//bening

// count = 0;
// let results = {}
fs.readdirSync(cleanDirectory).forEach(file => {
    //set filepath
    let filePath = `./${cleanDirectory}/${file}`

    //get entropy
    try {
        let data = execSync(`node ${enginePath} ./${filePath}`, { encoding: 'utf8', maxBuffer: 50 * 1024 * 1024 })

        // console.log(data)
        results[file] = {
            'Actual':'Benign'
        }
        let isMal = ''
        if (data.includes('MALWARE')) {
            console.log(`M.A.TScan`)
            console.log(`file: ${file}`)
            console.log('malware')
            isMal = 'malware'
        }
        else {
            console.log(`M.A.T Scan`)
            console.log(`file: ${file}`)
            console.log('benign')
            isMal = 'benign'

        }
        results[file]['MAT'] = isMal
    }
    catch (e) {
        console.log(`can't open: ${e}`)

    }


    setTimeout(() => {

        // console.log(curValue)
        fs.readFile(filePath, (err, data) => {
            if (err) {
                console.log(`Cannot read file. ${err}`);
            } else {
                virusTotal
                .fileScan(data, filePath)
                .then(response => {
                    let resource = response.resource;
                    // sometimes later try:
                    virusTotal.fileReport(resource).then(result => {
                            let curValue = count
                            console.log('=================')
                            console.log(result.positives);
                            console.log(result.total);
                            console.log(curValue)
                            results[file]['VT']= `${result.positives} out of ${result.total} or ${Math.trunc(100*(result.positives/result.total))}%`
                            
                            fs.writeFileSync('testResults.txt', JSON.stringify(results,null,2)) 
                        });
                    })
                    .catch(err => console.log(`Scan failed. ${err}`));
            }
        });
    },
        count*30000 + 1000
    )
    // malwareFiles.push(file)
    count++

})


fs.readdirSync(unknownDirectory).forEach(file => {
    //set filepath
    let filePath = `${unknownDirectory}/${file}`
    console.log(filePath)
    //get entropy
    try {
        let data = execSync(`node ${enginePath} ./${filePath}`, { encoding: 'utf8', maxBuffer: 50 * 1024 * 1024 })

        // console.log(data)
        results[file] = {
            'Actual':'SEE NAME'
        }
        let isMal = ''
        if (data.includes('MALWARE')) {
            console.log(`M.A.TScan`)
            console.log(`file: ${file}`)
            console.log('malware')
            isMal = 'malware'
        }
        else {
            console.log(`M.A.T Scan`)
            console.log(`file: ${file}`)
            console.log('benign')
            isMal = 'benign'

        }
        results[file]['MAT'] = isMal
    }
    catch (e) {
        console.log(`can't open: ${e}`)

    }


    setTimeout(() => {

        // console.log(curValue)
        fs.readFile(filePath, (err, data) => {
            if (err) {
                console.log(`Cannot read file. ${err}`);
            } else {
                virusTotal
                .fileScan(data, filePath)
                .then(response => {
                    let resource = response.resource;
                    // sometimes later try:
                    virusTotal.fileReport(resource).then(result => {
                            let curValue = count
                            console.log('=================')
                            console.log(result.positives);
                            console.log(result.total);
                            console.log(result)
                            console.log(curValue)
                            results[file]['VT']= `${result.positives} out of ${result.total} or ${Math.trunc(100*(result.positives/result.total))}%`
                            
                            fs.writeFileSync('testResults.txt', JSON.stringify(results,null,2)) 
                        });
                    })
                    .catch(err => console.log(`Scan failed. ${err}`));
            }
        });
    },
        count*30000 + 1000
    )
    // malwareFiles.push(file)
    count++

})






