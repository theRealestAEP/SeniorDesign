import os
import sys

dataFile = "partialTestSet.arff"

# check if there is an argument given THERE NEEDS TO BE ONE
if(len(sys.argv) > 1):
    dataFile = sys.argv[1]
    absPath = sys.argv[2]
else:
    print("error: no argument given")
    exit(1)

print(dataFile)
if(os.path.exists(dataFile)):
    print("exists!")
else:
    print("problem: file doesn't exist in given directory")
    exit(1)

# create .arff file from a given .csv
if(dataFile[-3:-1] + dataFile[-1] == "csv"):
    print("given a .csv, converting to .arff")
    arffFile = dataFile[0:-4] + ".arff"
    arffPath = "java -cp " + "\"" + absPath + "/ML/weka.jar\" weka.core.converters.CSVLoader " + \
        dataFile.replace(' ', '\\ ') + " > " + \
                         arffFile.replace(' ', '\\ ') + " -B 1000"
    print(arffPath)
    os.system(arffPath)
    dataFile = arffFile

    # open arff
    arff = open(dataFile)
    arffContent = arff.readlines()

    # generate a new file
    generated = open(f"{absPath}/ML/generated.arff", 'a')

    # read from header
    headerFile = open(f"{absPath}/ML/headers.txt")
    headerContent = headerFile.readlines()

    # write header content to generated
    generated.writelines(headerContent)
    generated.writelines("\n")

    # write arff content to generated
    generated.writelines(arffContent[100])  # .upper()) MIGHT NEED
    generated.close()
    generatedWriteable = open(f"{absPath}/ML/generated.arff")
    generatedContent = generatedWriteable.readlines()

    # convert arff file to generated
    arffWriteable = open(f"{absPath}/ML/flamingo.txt", "w")
    arffWriteable.writelines(generatedContent)
    
    
    # remove generated
    os.remove(f"{absPath}/ML/generated.arff")
    os.remove(arffFile)
    os.rename(f"{absPath}/ML/flamingo.txt",arffFile)
    arffWriteable.close()

# run model on generated .arff

# genPath = "java -cp " +absPath.replace(' ', '\\ ') +"/ML/weka.jar weka.classifiers.trees.RandomForest -T " + dataFile.replace(' ', '\\ ') + " -l " + absPath.replace(' ', '\\ ') + "/ML/bayesNet.model -p 0 -c 1 > " + absPath.replace(' ', '\\ ') + "/ML/prediction.txt"
# print(genPath)

os.system("java -cp " +absPath.replace(' ', '\\ ') +"/ML/weka.jar weka.classifiers.trees.RandomForest -T " + dataFile.replace(' ', '\\ ') + " -l " + absPath.replace(' ', '\\ ') + "/ML/randomForest.model -p 0 -c 1 > "+ absPath.replace(' ', '\\ ') + "/ML/prediction.txt")

# open the sample file used
file = open(f'{absPath}/ML/prediction.txt')

# read the content of the file opened
content = file.readlines()

# read prediction of single instance
val = content[5]

if "malicous" in val:
    print("MALWARE")
elif "benign" in val:
    print("BENIGN")
else:
    print("ERROR")
