const fs = require('fs')


const malwareDirectory = "./Malware"
const cleanFileDirectory = "./CleanFiles"

const getDLLPath = "./goComp/PEDLLParser/dll"
const getEntropyPath = "./goComp/EntropyUtil/Entropy_Util"


const execSync = require('child_process').execSync


const main = () => {
    let malwareFiles = []
    let malwareFilesData = []

    let cleanFiles = []

    // execSync(`../src/malwareEngine ./${malwareDirectory}/0d83906aa1c84a83028cd12f8ef9582a260f94e56c4254cb35735b98d7266b8e.exe`, {stdio: 'inherit'})


    /*
        Getting DLLS and their frequency 
    */
    fs.readdirSync(malwareDirectory).forEach(file => {
        malwareFiles.push(file)
        // console.log(file)
        try{
            let data = execSync(`${getDLLPath} ./${malwareDirectory}/${file}`, { encoding: 'utf8', maxBuffer: 50 * 1024 * 1024 })
            // console.log(typeof data)
            // let pData = JSON.parse(data.stdout)
            // console.log(`The DATA ******: ${data} test`)
            malwareFilesData.push(data)
        }
        catch(e){
            // console.log(`can't open: ${e}`)
            malwareFilesData.push('error')
        }
        // try{
        //     execSync(`${getEntropyPath} ./${malwareDirectory}/${file}`,  {stdio: 'inherit'})

        // }
        // catch(e){
        //     console.log(`can't open: ${e}`)
        // }
    });

    for(let i=0; i<malwareFiles.length; i++){
        console.log(`${malwareFiles[i]}:${malwareFilesData[i]}`)
    }

    // fs.readdirSync(cleanFileDirectory).forEach(file => {
    //     cleanFiles.push(file)
    //     // console.log(file)
    //     try{
    //         execSync(`${getDLLPath} ./${cleanFileDirectory}/${file}`,  {stdio: 'inherit'})
    //     }
    //     catch(e){
    //         console.log(`can't open: ${e}`)
    //     }
    //     try{
    //         execSync(`${getEntropyPath} ./${cleanFileDirectory}/${file}`,  {stdio: 'inherit'})

    //     }
    //     catch(e){
    //         console.log(`can't open: ${e}`)
    //     }
    // });

    //run all the files through go engine & store output 

    

    //create csv of different frequencies

}


// const debug = () => {
//     for(let i=0; i<malwareFiles.length; i++){
//         console.log(`${malwareFiles[i]}:${malwareFilesData[i]}`)
//     }
// }

main()

