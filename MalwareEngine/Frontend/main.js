const { app, BrowserWindow, ipcMain } = require('electron')
const malwareScanMac = require('../engineV2/MacBuild/dependencies/macEval').main

// const malwareScanMac = util.promisify(malwareScan);

let platform = process.platform

const createWindow = () => {
    const win = new BrowserWindow({
        width: 800,
        height: 600,
        webPreferences: {
            nodeIntegration: true,
            contextIsolation: false
        },
    })
    //openDevTools throws error just comment out to get rid of
    // win.webContents.openDevTools();
    win.loadFile('index.html')
}

app.whenReady().then(() => {
    createWindow()
})


app.on('window-all-closed', () => {
    if (process.platform !== 'darwin') app.quit()
})

ipcMain.on("myButtonClick", (event, data) => {
    // console.log(event)
    console.log(data)
    if (platform == 'darwin') {
        malwareScanMac(data).then((result) => {
            console.log(result)
            event.sender.send('eval', result);
        })
    }
})

ipcMain.on("dropZone", (evt, data) => {
    //console.log(evt);
    console.log(data);
    if (platform == 'darwin') {
        malwareScanMac(data).then((result) => {
            console.log(result)
            evt.sender.send('eval', result);

        })

    }

})

// ipcMain.on("dropZone", (evt, data) => {
//     //console.log(evt);
//     console.log(data);
//     if(platform == 'darwin'){
//         let result = malwareScanMac(data)
//         console.log(result)
//     }

// })

ipcMain.on("browserData", (evt, data) => {
    //console.log(evt);
    console.log(data);
    if (platform == 'darwin') {
        malwareScanMac(data).then((result) => {
            console.log(result)
            evt.sender.send('eval', result);
        })
    }

})

console.log('hello World')